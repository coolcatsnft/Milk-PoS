/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlMixin,
  AccessControlMixinInterface,
} from "../AccessControlMixin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610787806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806336568abe1161005b57806336568abe146100f057806391d1485414610103578063a217fddf14610116578063d547741f1461011e57600080fd5b806301ffc9a714610082578063248a9ca3146100aa5780632f2ff15d146100db575b600080fd5b6100956100903660046105ed565b610131565b60405190151581526020015b60405180910390f35b6100cd6100b836600461059b565b60009081526020819052604090206001015490565b6040519081526020016100a1565b6100ee6100e93660046105b3565b610168565b005b6100ee6100fe3660046105b3565b610193565b6100956101113660046105b3565b610216565b6100cd600081565b6100ee61012c3660046105b3565b61023f565b60006001600160e01b03198216637965db0b60e01b148061016257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101848133610265565b61018e83836102c9565b505050565b6001600160a01b03811633146102085760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610212828261034d565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461025b8133610265565b61018e838361034d565b61026f8282610216565b61021257610287816001600160a01b031660146103b2565b6102928360206103b2565b6040516020016102a3929190610615565b60408051601f198184030181529082905262461bcd60e51b82526101ff9160040161068a565b6102d38282610216565b610212576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556103093390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6103578282610216565b15610212576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006103c18360026106d5565b6103cc9060026106bd565b67ffffffffffffffff8111156103f257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561041c576020820181803683370190505b509050600360fc1b8160008151811061044557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061048257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006104a68460026106d5565b6104b19060016106bd565b90505b6001811115610545576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104f357634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061051757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361053e81610724565b90506104b4565b5083156105945760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101ff565b9392505050565b6000602082840312156105ac578081fd5b5035919050565b600080604083850312156105c5578081fd5b8235915060208301356001600160a01b03811681146105e2578182fd5b809150509250929050565b6000602082840312156105fe578081fd5b81356001600160e01b031981168114610594578182fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161064d8160178501602088016106f4565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161067e8160288401602088016106f4565b01602801949350505050565b60208152600082518060208401526106a98160408501602087016106f4565b601f01601f19169190910160400192915050565b600082198211156106d0576106d061073b565b500190565b60008160001904831182151516156106ef576106ef61073b565b500290565b60005b8381101561070f5781810151838201526020016106f7565b8381111561071e576000848401525b50505050565b6000816107335761073361073b565b506000190190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122087f7ac493e63efd8039ebb140e79dbde91321411474cb65376ab3f469cdee0d664736f6c63430008040033";

export class AccessControlMixin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlMixin> {
    return super.deploy(overrides || {}) as Promise<AccessControlMixin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControlMixin {
    return super.attach(address) as AccessControlMixin;
  }
  connect(signer: Signer): AccessControlMixin__factory {
    return super.connect(signer) as AccessControlMixin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlMixinInterface {
    return new utils.Interface(_abi) as AccessControlMixinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlMixin {
    return new Contract(address, _abi, signerOrProvider) as AccessControlMixin;
  }
}
